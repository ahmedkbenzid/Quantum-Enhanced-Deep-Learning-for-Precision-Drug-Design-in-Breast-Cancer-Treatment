{"ast":null,"code":"// src/components/AuthContext.js\nimport React,{createContext,useContext,useState,useEffect}from\"react\";import authService from\"../pages/services/authService\";// Create Auth Context\nimport{jsx as _jsx}from\"react/jsx-runtime\";const AuthContext=/*#__PURE__*/createContext();// AuthContext Provider Component\nexport const AuthContextProvider=_ref=>{let{children}=_ref;const[currentUser,setCurrentUser]=useState(null);useEffect(()=>{const user=authService.getCurrentUser();if(user){setCurrentUser(user);}},[]);const login=async(username,password)=>{const response=await authService.login(username,password);if(response.success){setCurrentUser(response.user);}return response;};const logout=()=>{authService.logout();setCurrentUser(null);};return/*#__PURE__*/_jsx(AuthContext.Provider,{value:{currentUser,login,logout},children:children});};// Custom hook to use AuthContext\nexport const useAuth=()=>useContext(AuthContext);","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","authService","jsx","_jsx","AuthContext","AuthContextProvider","_ref","children","currentUser","setCurrentUser","user","getCurrentUser","login","username","password","response","success","logout","Provider","value","useAuth"],"sources":["C:/Users/ml933/Desktop/new/drug-design-breast-cancer/src/components/AuthContext.js"],"sourcesContent":["// src/components/AuthContext.js\r\n\r\nimport React, { createContext, useContext, useState, useEffect } from \"react\";\r\nimport authService from \"../pages/services/authService\";\r\n\r\n// Create Auth Context\r\nconst AuthContext = createContext();\r\n\r\n// AuthContext Provider Component\r\nexport const AuthContextProvider = ({ children }) => {\r\n  const [currentUser, setCurrentUser] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const user = authService.getCurrentUser();\r\n    if (user) {\r\n      setCurrentUser(user);\r\n    }\r\n  }, []);\r\n\r\n  const login = async (username, password) => {\r\n    const response = await authService.login(username, password);\r\n    if (response.success) {\r\n      setCurrentUser(response.user);\r\n    }\r\n    return response;\r\n  };\r\n\r\n  const logout = () => {\r\n    authService.logout();\r\n    setCurrentUser(null);\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ currentUser, login, logout }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\n// Custom hook to use AuthContext\r\nexport const useAuth = () => useContext(AuthContext);\r\n"],"mappings":"AAAA;AAEA,MAAO,CAAAA,KAAK,EAAIC,aAAa,CAAEC,UAAU,CAAEC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAC7E,MAAO,CAAAC,WAAW,KAAM,+BAA+B,CAEvD;AAAA,OAAAC,GAAA,IAAAC,IAAA,yBACA,KAAM,CAAAC,WAAW,cAAGP,aAAa,CAAC,CAAC,CAEnC;AACA,MAAO,MAAM,CAAAQ,mBAAmB,CAAGC,IAAA,EAAkB,IAAjB,CAAEC,QAAS,CAAC,CAAAD,IAAA,CAC9C,KAAM,CAACE,WAAW,CAAEC,cAAc,CAAC,CAAGV,QAAQ,CAAC,IAAI,CAAC,CAEpDC,SAAS,CAAC,IAAM,CACd,KAAM,CAAAU,IAAI,CAAGT,WAAW,CAACU,cAAc,CAAC,CAAC,CACzC,GAAID,IAAI,CAAE,CACRD,cAAc,CAACC,IAAI,CAAC,CACtB,CACF,CAAC,CAAE,EAAE,CAAC,CAEN,KAAM,CAAAE,KAAK,CAAG,KAAAA,CAAOC,QAAQ,CAAEC,QAAQ,GAAK,CAC1C,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAd,WAAW,CAACW,KAAK,CAACC,QAAQ,CAAEC,QAAQ,CAAC,CAC5D,GAAIC,QAAQ,CAACC,OAAO,CAAE,CACpBP,cAAc,CAACM,QAAQ,CAACL,IAAI,CAAC,CAC/B,CACA,MAAO,CAAAK,QAAQ,CACjB,CAAC,CAED,KAAM,CAAAE,MAAM,CAAGA,CAAA,GAAM,CACnBhB,WAAW,CAACgB,MAAM,CAAC,CAAC,CACpBR,cAAc,CAAC,IAAI,CAAC,CACtB,CAAC,CAED,mBACEN,IAAA,CAACC,WAAW,CAACc,QAAQ,EAACC,KAAK,CAAE,CAAEX,WAAW,CAAEI,KAAK,CAAEK,MAAO,CAAE,CAAAV,QAAA,CACzDA,QAAQ,CACW,CAAC,CAE3B,CAAC,CAED;AACA,MAAO,MAAM,CAAAa,OAAO,CAAGA,CAAA,GAAMtB,UAAU,CAACM,WAAW,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}