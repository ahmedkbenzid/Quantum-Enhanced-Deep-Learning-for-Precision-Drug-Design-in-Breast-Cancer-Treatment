{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ml933\\\\Desktop\\\\new\\\\drug-design-breast-cancer\\\\src\\\\components\\\\PrivateRoute.js\",\n  _s = $RefreshSig$();\n// src/components/PrivateRoute.js\n\nimport React from \"react\";\nimport { Route, Navigate } from \"react-router-dom\"; // Replace Redirect with Navigate\nimport { useAuth } from \"./AuthContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PrivateRoute = ({\n  component: Component,\n  roles,\n  ...rest\n}) => {\n  _s();\n  const {\n    currentUser\n  } = useAuth();\n\n  // Check if the user is not authenticated\n  if (!currentUser) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/login\",\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Check if the user's role is not authorized\n  if (roles && !roles.includes(currentUser.role)) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/unauthorized\",\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Render the component for authorized users\n  return /*#__PURE__*/_jsxDEV(Route, {\n    ...rest,\n    element: props => /*#__PURE__*/_jsxDEV(Component, {\n      ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 27\n    }, this) // Use the `element` prop instead of `render`\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n_s(PrivateRoute, \"byfRDkJ+t3MKhIwXgwbXYFaZtD0=\", false, function () {\n  return [useAuth];\n});\n_c = PrivateRoute;\nexport default PrivateRoute;\nvar _c;\n$RefreshReg$(_c, \"PrivateRoute\");","map":{"version":3,"names":["React","Route","Navigate","useAuth","jsxDEV","_jsxDEV","PrivateRoute","component","Component","roles","rest","_s","currentUser","to","replace","fileName","_jsxFileName","lineNumber","columnNumber","includes","role","element","props","_c","$RefreshReg$"],"sources":["C:/Users/ml933/Desktop/new/drug-design-breast-cancer/src/components/PrivateRoute.js"],"sourcesContent":["// src/components/PrivateRoute.js\r\n\r\nimport React from \"react\";\r\nimport { Route, Navigate } from \"react-router-dom\"; // Replace Redirect with Navigate\r\nimport { useAuth } from \"./AuthContext\";\r\n\r\nconst PrivateRoute = ({ component: Component, roles, ...rest }) => {\r\n  const { currentUser } = useAuth();\r\n\r\n  // Check if the user is not authenticated\r\n  if (!currentUser) {\r\n    return <Navigate to=\"/login\" replace />;\r\n  }\r\n\r\n  // Check if the user's role is not authorized\r\n  if (roles && !roles.includes(currentUser.role)) {\r\n    return <Navigate to=\"/unauthorized\" replace />;\r\n  }\r\n\r\n  // Render the component for authorized users\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      element={(props) => <Component {...props} />} // Use the `element` prop instead of `render`\r\n    />\r\n  );\r\n};\r\n\r\nexport default PrivateRoute;"],"mappings":";;AAAA;;AAEA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,KAAK,EAAEC,QAAQ,QAAQ,kBAAkB,CAAC,CAAC;AACpD,SAASC,OAAO,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,YAAY,GAAGA,CAAC;EAAEC,SAAS,EAAEC,SAAS;EAAEC,KAAK;EAAE,GAAGC;AAAK,CAAC,KAAK;EAAAC,EAAA;EACjE,MAAM;IAAEC;EAAY,CAAC,GAAGT,OAAO,CAAC,CAAC;;EAEjC;EACA,IAAI,CAACS,WAAW,EAAE;IAChB,oBAAOP,OAAA,CAACH,QAAQ;MAACW,EAAE,EAAC,QAAQ;MAACC,OAAO;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACzC;;EAEA;EACA,IAAIT,KAAK,IAAI,CAACA,KAAK,CAACU,QAAQ,CAACP,WAAW,CAACQ,IAAI,CAAC,EAAE;IAC9C,oBAAOf,OAAA,CAACH,QAAQ;MAACW,EAAE,EAAC,eAAe;MAACC,OAAO;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAChD;;EAEA;EACA,oBACEb,OAAA,CAACJ,KAAK;IAAA,GACAS,IAAI;IACRW,OAAO,EAAGC,KAAK,iBAAKjB,OAAA,CAACG,SAAS;MAAA,GAAKc;IAAK;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC/C,CAAC;AAEN,CAAC;AAACP,EAAA,CApBIL,YAAY;EAAA,QACQH,OAAO;AAAA;AAAAoB,EAAA,GAD3BjB,YAAY;AAsBlB,eAAeA,YAAY;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}