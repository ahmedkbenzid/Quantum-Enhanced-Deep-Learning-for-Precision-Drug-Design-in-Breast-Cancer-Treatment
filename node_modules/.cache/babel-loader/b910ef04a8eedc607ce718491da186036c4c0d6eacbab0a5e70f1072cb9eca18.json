{"ast":null,"code":"// src/pages/services/authService.js\n\nconst authService = {\n  login: async (username, password) => {\n    // Replace this with real authentication logic (e.g., API call)\n    if (username === \"admin\" && password === \"password\") {\n      localStorage.setItem(\"user\", JSON.stringify({\n        username,\n        role: \"admin\"\n      }));\n      return {\n        success: true,\n        user: {\n          username,\n          role: \"admin\"\n        }\n      };\n    }\n    if (username === \"pharma\" && password === \"password\") {\n      localStorage.setItem(\"user\", JSON.stringify({\n        username,\n        role: \"pharma\"\n      }));\n      return {\n        success: true,\n        user: {\n          username,\n          role: \"pharma\"\n        }\n      };\n    }\n    if (username === \"chimiste\" && password === \"password\") {\n      localStorage.setItem(\"user\", JSON.stringify({\n        username,\n        role: \"chimiste\"\n      }));\n      return {\n        success: true,\n        user: {\n          username,\n          role: \"chimiste\"\n        }\n      };\n    }\n    if (username === \"dev\" && password === \"password\") {\n      localStorage.setItem(\"user\", JSON.stringify({\n        username,\n        role: \"dev\"\n      }));\n      return {\n        success: true,\n        user: {\n          username,\n          role: \"dev\"\n        }\n      };\n    }\n    return {\n      success: false,\n      message: \"Invalid credentials\"\n    };\n  },\n  logout: () => {\n    localStorage.removeItem(\"user\");\n  },\n  getCurrentUser: () => {\n    const user = JSON.parse(localStorage.getItem(\"user\"));\n    return user;\n  }\n};\nexport default authService;","map":{"version":3,"names":["authService","login","username","password","localStorage","setItem","JSON","stringify","role","success","user","message","logout","removeItem","getCurrentUser","parse","getItem"],"sources":["C:/Users/ml933/Desktop/new/drug-design-breast-cancer/src/pages/services/authService.js"],"sourcesContent":["// src/pages/services/authService.js\r\n\r\nconst authService = {\r\n  login: async (username, password) => {\r\n    // Replace this with real authentication logic (e.g., API call)\r\n    if (username === \"admin\" && password === \"password\") {\r\n      localStorage.setItem(\"user\", JSON.stringify({ username, role: \"admin\" }));\r\n      return { success: true, user: { username, role: \"admin\" } };\r\n    }\r\n    if (username === \"pharma\" && password === \"password\") {\r\n      localStorage.setItem(\"user\", JSON.stringify({ username, role: \"pharma\" }));\r\n      return { success: true, user: { username, role: \"pharma\" } };\r\n    }\r\n    if (username === \"chimiste\" && password === \"password\") {\r\n      localStorage.setItem(\"user\", JSON.stringify({ username, role: \"chimiste\" }));\r\n      return { success: true, user: { username, role: \"chimiste\" } };\r\n    }\r\n    if (username === \"dev\" && password === \"password\") {\r\n      localStorage.setItem(\"user\", JSON.stringify({ username, role: \"dev\" }));\r\n      return { success: true, user: { username, role: \"dev\" } };\r\n    }\r\n    return { success: false, message: \"Invalid credentials\" };\r\n  },\r\n\r\n  logout: () => {\r\n    localStorage.removeItem(\"user\");\r\n  },\r\n\r\n  getCurrentUser: () => {\r\n    const user = JSON.parse(localStorage.getItem(\"user\"));\r\n    return user;\r\n  },\r\n};\r\n\r\nexport default authService;"],"mappings":"AAAA;;AAEA,MAAMA,WAAW,GAAG;EAClBC,KAAK,EAAE,MAAAA,CAAOC,QAAQ,EAAEC,QAAQ,KAAK;IACnC;IACA,IAAID,QAAQ,KAAK,OAAO,IAAIC,QAAQ,KAAK,UAAU,EAAE;MACnDC,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEL,QAAQ;QAAEM,IAAI,EAAE;MAAQ,CAAC,CAAC,CAAC;MACzE,OAAO;QAAEC,OAAO,EAAE,IAAI;QAAEC,IAAI,EAAE;UAAER,QAAQ;UAAEM,IAAI,EAAE;QAAQ;MAAE,CAAC;IAC7D;IACA,IAAIN,QAAQ,KAAK,QAAQ,IAAIC,QAAQ,KAAK,UAAU,EAAE;MACpDC,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEL,QAAQ;QAAEM,IAAI,EAAE;MAAS,CAAC,CAAC,CAAC;MAC1E,OAAO;QAAEC,OAAO,EAAE,IAAI;QAAEC,IAAI,EAAE;UAAER,QAAQ;UAAEM,IAAI,EAAE;QAAS;MAAE,CAAC;IAC9D;IACA,IAAIN,QAAQ,KAAK,UAAU,IAAIC,QAAQ,KAAK,UAAU,EAAE;MACtDC,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEL,QAAQ;QAAEM,IAAI,EAAE;MAAW,CAAC,CAAC,CAAC;MAC5E,OAAO;QAAEC,OAAO,EAAE,IAAI;QAAEC,IAAI,EAAE;UAAER,QAAQ;UAAEM,IAAI,EAAE;QAAW;MAAE,CAAC;IAChE;IACA,IAAIN,QAAQ,KAAK,KAAK,IAAIC,QAAQ,KAAK,UAAU,EAAE;MACjDC,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEL,QAAQ;QAAEM,IAAI,EAAE;MAAM,CAAC,CAAC,CAAC;MACvE,OAAO;QAAEC,OAAO,EAAE,IAAI;QAAEC,IAAI,EAAE;UAAER,QAAQ;UAAEM,IAAI,EAAE;QAAM;MAAE,CAAC;IAC3D;IACA,OAAO;MAAEC,OAAO,EAAE,KAAK;MAAEE,OAAO,EAAE;IAAsB,CAAC;EAC3D,CAAC;EAEDC,MAAM,EAAEA,CAAA,KAAM;IACZR,YAAY,CAACS,UAAU,CAAC,MAAM,CAAC;EACjC,CAAC;EAEDC,cAAc,EAAEA,CAAA,KAAM;IACpB,MAAMJ,IAAI,GAAGJ,IAAI,CAACS,KAAK,CAACX,YAAY,CAACY,OAAO,CAAC,MAAM,CAAC,CAAC;IACrD,OAAON,IAAI;EACb;AACF,CAAC;AAED,eAAeV,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}