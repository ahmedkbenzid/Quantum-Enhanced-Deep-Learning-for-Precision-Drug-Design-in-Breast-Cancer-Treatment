# Generated by Django 5.2 on 2025-05-04 18:27

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Drug',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('drug_name', models.CharField(max_length=255)),
                ('drug_id', models.CharField(max_length=100, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='MLModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField()),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('model_type', models.CharField(blank=True, max_length=50, null=True)),
                ('model_architecture', models.CharField(blank=True, max_length=100, null=True)),
                ('loaded_in_memory', models.BooleanField(default=False)),
                ('last_loaded', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Machine Learning Model',
                'verbose_name_plural': 'Machine Learning Models',
            },
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('user_type', models.CharField(choices=[('admin', 'Administrator'), ('pharma', 'Pharmaceutical'), ('chemist', 'Chemist')], max_length=20)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='DrugRemark',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('target', models.CharField(max_length=255)),
                ('target_pathway', models.CharField(choices=[('Apoptosis', 'Apoptosis regulation'), ('CellCycle', 'Cell cycle'), ('HistoneAcetylation', 'Chromatin histone acetylation'), ('HistoneMethylation', 'Chromatin histone methylation'), ('Cytoskeleton', 'Cytoskeleton'), ('DNAReplication', 'DNA replication'), ('EGFR', 'EGFR signaling'), ('ERKMAPK', 'ERK MAPK signaling'), ('GenomeIntegrity', 'Genome integrity'), ('PI3KMTOR', 'PI3K/MTOR signaling'), ('WNT', 'WNT signaling'), ('p53', 'p53 pathway')], max_length=50)),
                ('cna', models.BooleanField(default=False)),
                ('gene_expression', models.BooleanField(default=False)),
                ('methylation', models.BooleanField(default=False)),
                ('msi_status', models.CharField(choices=[('MSS', 'MSS/MSI-L'), ('MSI-H', 'MSI-H'), ('Unknown', 'Unknown')], max_length=10)),
                ('screen_medium', models.CharField(choices=[('RPMI', 'RPMI'), ('DMEM', 'DMEM'), ('EMEM', 'EMEM'), ('Other', 'Other')], max_length=10)),
                ('growth_properties', models.CharField(choices=[('Suspension', 'Suspension'), ('Adherent', 'Adherent'), ('Mixed', 'Mixed'), ('Other', 'Other')], max_length=10)),
                ('auc', models.FloatField()),
                ('z_score', models.FloatField()),
                ('drug', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='remarks', to='api.drug')),
            ],
        ),
    ]
